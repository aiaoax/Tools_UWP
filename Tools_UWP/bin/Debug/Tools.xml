<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Tools</name>
    </assembly>
    <members>
        <member name="T:Tools.BT">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.BT.getDeviceInfo(System.String)">
            <summary>
            
            </summary>
            <param name="guid">(<see cref="T:System.String" />)</param>
            <returns>(<see cref="T:Windows.Devices.Enumeration.DeviceInformationCollection" />)</returns>
        </member>
        <member name="M:Tools.BT.getDeviceInfo(System.Guid)">
            <summary>
            
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="T:Tools.ColorName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.ColorName.#ctor(System.String,Windows.UI.Color)">
            <summary>
            
            </summary>
            <param name="_name"></param>
            <param name="_color"></param>
        </member>
        <member name="P:Tools.ColorName.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.ColorName.color">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tools.ColorNames">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tools.ColorNames.cls">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.ColorNames.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.ColorNames.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Tools.ColorNames.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.ColorNames.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.ColorNames.Add(Tools.ColorName)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:Tools.ColorNames.Items">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.ColorNames.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.ColorNames.Contains(Tools.ColorName)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.ColorNames.CopyTo(Tools.ColorName[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Tools.ColorNames.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tools.ColorNames.IndexOf(Tools.ColorName)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.ColorNames.Insert(System.Int32,Tools.ColorName)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Tools.ColorNames.Remove(Tools.ColorName)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.ColorNames.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Tools.ColorNames.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tools.ColorPicker">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.ColorPicker.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.ColorPicker.getBrush">
            <summary>
            ColorPickerから色を取得します
            </summary>
            <returns>(<see cref="T:Windows.UI.Xaml.Media.Brush" />)</returns>
        </member>
        <member name="M:Tools.ColorPicker.ToArgb(Windows.UI.Xaml.Media.Brush)">
            <summary>
            <see cref="T:Windows.UI.Xaml.Media.Brush" /> の32ビットの ARGB 値を取得します。
            </summary>
            <param name="brush"><see cref="T:Windows.UI.Xaml.Media.Brush" /></param>
            <returns>(<see cref="T:System.Int32" />)32ビット符号あり整数</returns>
        </member>
        <member name="M:Tools.ColorPicker.ToArgb(Windows.UI.Color)">
            <summary>
            <see cref="T:Windows.UI.Color" /> 構造体の32ビットの ARGB 値を取得します。
            </summary>
            <param name="color"><see cref="T:Windows.UI.Color" /> 構造体</param>
            <returns>(<see cref="T:System.Int32" />)32ビット符号あり整数</returns>
        </member>
        <member name="M:Tools.ColorPicker.FromArgb(System.Int32)">
            <summary>
            32ビットの ARGB 値から <see cref="T:Windows.UI.Color" /> 構造体を作成します
            </summary>
            <param name="argb">32ビットの ARGB 値</param>
            <returns><see cref="T:Windows.UI.Color" /> 構造体</returns>
        </member>
        <member name="M:Tools.ColorPicker.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            8ビットの ARGB 値から <see cref="T:Windows.UI.Xaml.Media.SolidColorBrush" /> 構造体を作成します
            </summary>
            <param name="a">透明度</param>
            <param name="r">赤色</param>
            <param name="g">緑色</param>
            <param name="b">青色</param>
            <returns></returns>
        </member>
        <member name="M:Tools.ColorPicker.FromBrush(Windows.UI.Xaml.Media.Brush)">
            <summary>
            <see cref="T:Windows.UI.Xaml.Media.Brush" /> から <see cref="T:Windows.UI.Color" /> 構造体を作成します。
            </summary>
            <param name="brush"><see cref="T:Windows.UI.Xaml.Media.Brush" /></param>
            <returns><see cref="T:Windows.UI.Color" /> 構造体</returns>
        </member>
        <member name="M:Tools.ColorPicker.brush2name(Windows.UI.Xaml.Media.Brush)">
            <summary>
            <see cref="T:Windows.UI.Xaml.Media.Brush" /> から 色の名前を取得します。
            </summary>
            <param name="brush"><see cref="T:Windows.UI.Xaml.Media.Brush" /></param>
            <returns>色の名前</returns>
        </member>
        <member name="M:Tools.ColorPicker.FromName(System.String)">
            <summary>
            定義済みの色の指定した名前から <see cref="T:Windows.UI.Color" /> 構造体を作成します。
            </summary>
            <param name="name"><see cref="T:System.String" /> 定義済みの色の名前を示す文字列。有効な名前は <see cref="T:Windows.UI.Colors" /> 列挙体の要素と同じです。</param>
            <returns><see cref="T:Windows.UI.Color" /> 構造体</returns>
        </member>
        <member name="M:Tools.ColorPicker.getUserColor">
            <summary>
            ユーザーが設定で選択しているアクセントカラーを取得します
            </summary>
            <returns><see cref="T:Windows.UI.Xaml.Media.SolidColorBrush" /></returns>
        </member>
        <member name="M:Tools.ColorPicker.getResourceColor(System.String)">
            <summary>
            システムカラーリソースの色を取得します。
            </summary>
            <param name="colorname"><see cref="T:System.String" /> 取得したいシステムカラーの名前</param>
            <returns></returns>
        </member>
        <member name="M:Tools.ColorPicker.getFontSize">
            <summary>
            フォントサイズをまとめてint配列として返します
            </summary>
            <returns><see cref="T:System.Int32" /></returns>
        </member>
        <member name="M:Tools.ColorPicker.getFontNames">
            <summary>
            フォントの名前をstring配列でまとめて返します
            </summary>
            <returns><see cref="!:string[]" /></returns>
        </member>
        <member name="M:Tools.ColorPicker.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Tools.ColorPicker.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="T:Tools.Data">
            <summary>
            データの保存、読み込みをするメソッドです。
            </summary>
        </member>
        <member name="M:Tools.Data.Save(System.String,System.Object)">
            <summary>
            ローカルデータを保存します。
            </summary>
            <param name="key">(<see cref="T:System.String" />)キー</param>
            <param name="value"><see cref="T:System.Object" />値</param>
        </member>
        <member name="M:Tools.Data.Load(System.String)">
            <summary>
            ローカルデータを読み込みます。
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <returns><see cref="T:System.Object" />読み込みに成功したときに、このメソッドが返される時 object 型で値を格納します。読み込みに失敗したときは null を格納します。</returns>
        </member>
        <member name="M:Tools.Data.Load(System.String,System.Object@)">
            <summary>
            ローカルデータを読み込みます。
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <param name="val"><see cref="T:System.Object" />読み込みに成功したときに、このメソッドが返される時 object 型で値を格納します。読み込みに失敗したときは null を格納します。</param>
            <returns><see cref="T:System.Boolean" />読み込みが成功した場合 true 、失敗した時は false を返します。</returns>
        </member>
        <member name="M:Tools.Data.IsLoad(System.String)">
            <summary>
            ローカルデータを読み込み出来るかどうかを判定します。
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <returns><see cref="T:System.Boolean" />読み込みが成功した場合 true 、失敗した時は false を返します。</returns>
        </member>
        <member name="M:Tools.Data.LoadAllKeys">
            <summary>
            ローカルデータの中を一覧で取得します
            </summary>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1" /></returns>
        </member>
        <member name="M:Tools.Data.Delete(System.String)">
            <summary>
            ローカルデータを削除します。
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <returns><see cref="T:System.Boolean" />削除が成功した場合 true 、失敗した時は false を返します。</returns>
        </member>
        <member name="M:Tools.Data.SaveRoaming(System.String,System.Object)">
            <summary>
            ローミングデータを保存します
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <param name="value"><see cref="T:System.String" />値</param>
        </member>
        <member name="M:Tools.Data.LoadRoaming(System.String)">
            <summary>
            ローミングデータを読み込みます。
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <returns><see cref="T:System.Object" />読み込みに成功したときに、このメソッドが返される時 object 型で値を格納します。読み込みに失敗したときは null を格納します。</returns>
        </member>
        <member name="M:Tools.Data.LoadRoaming(System.String,System.Object@)">
            <summary>
            ローミングデータを読み込みます。
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <param name="val"><see cref="T:System.Object" />読み込みに成功したときに、このメソッドが返される時 object 型で値を格納します。読み込みに失敗したときは null を格納します。</param>
            <returns><see cref="T:System.Boolean" />読み込みが成功した場合 true 、失敗した時は false を返します。</returns>
        </member>
        <member name="M:Tools.Data.IsLoadRoaming(System.String)">
            <summary>
            ローミングデータを読み込み出来るかどうかを判定します。
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <returns><see cref="T:System.Boolean" />読み込みが成功した場合 true 、失敗した時は false を返します。</returns>
        </member>
        <member name="M:Tools.Data.LoadRoamingAllKeys">
            <summary>
            ローミングデータの中を一覧で取得します
            </summary>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1" /></returns>
        </member>
        <member name="M:Tools.Data.DeleteRoaming(System.String)">
            <summary>
            ローミングデータを削除します。
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <returns><see cref="T:System.Boolean" />削除が成功した場合 true 、失敗した時は false を返します。</returns>
        </member>
        <member name="M:Tools.Data.SaveTemp(System.String,System.String)">
            <summary>
            一時データを保存します
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <param name="value"><see cref="T:System.String" />値</param>
        </member>
        <member name="M:Tools.Data.LoadTempAsync(System.String)">
            <summary>
            一時データを読み込みます
            </summary>
            <param name="key"><see cref="T:System.String" />キー</param>
            <returns><see cref="T:System.String" />文字列の値。存在しないときは string.Empty です</returns>
        </member>
        <member name="M:Tools.Data.LoadTempAllKeysAsync">
            <summary>
            ローカルデータの中を一覧で取得します
            </summary>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1" /></returns>
        </member>
        <member name="M:Tools.Data.buffer2BitmapImage(Windows.Storage.Streams.IBuffer)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="T:Tools.LyricData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.LyricData.rootPage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.LyricData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.LyricData.#ctor(Windows.Foundation.TimeSpan,System.String)">
            <summary>
            
            </summary>
            <param name="_time"></param>
            <param name="_lyric"></param>
        </member>
        <member name="M:Tools.LyricData.#ctor(Windows.Foundation.TimeSpan,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="_time"></param>
            <param name="_lyric"></param>
            <param name="_yomi"></param>
        </member>
        <member name="P:Tools.LyricData.time">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.LyricData.lyric">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.LyricData.yomi">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.LyricData.color">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.LyricData.back">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.LyricData.font">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.LyricData.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tools.LyricData.ToListAsync(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="lyrictxt"></param>
            <param name="yomi"></param>
            <param name="print"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.LyricData.ToListAsync(Windows.Storage.StorageFile)">
            <summary>
            
            </summary>
            <param name="musicfile"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.LyricData.ToTextAsync(Windows.Foundation.Collections.IVectorView{Tools.LyricData})">
            <summary>
            
            </summary>
            <param name="lds"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.LyricData.ToText_yomiAsync(Windows.Foundation.Collections.IVectorView{Tools.LyricData})">
            <summary>
            
            </summary>
            <param name="lds"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.LyricData.getYomiAsync(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.LyricData.zenkaku2hankaku(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.LyricData.getKasiFilePath(System.String)">
            <summary>
            
            </summary>
            <param name="musicpath"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.LyricData.getYomiFilePath(System.String)">
            <summary>
            
            </summary>
            <param name="musicpath"></param>
            <returns></returns>
        </member>
        <member name="T:Tools.MessageBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.MessageBox.rootPage">
            <summary>
            <see cref="T:Tools.MessageBox" /> を使用する前に表示するページを入れてください。(通常は this)
            </summary>
            <example> 
            このコードを <see cref="T:Tools.MessageBox" /> を表示する前に入れてください。
            <code>
            MessageBox.rootPage = this;
            </code>
            </example>
        </member>
        <member name="M:Tools.MessageBox.ShowAsync(System.String)">
            <summary>
            指定したテキストを表示するメッセージ ボックスを表示します。
            </summary>
            <param name="text">メッセージ ボックスに表示するテキスト。</param>
            <returns><see cref="T:Tools.DialogResult" /> 値のいずれか 1 つ。</returns>
        </member>
        <member name="M:Tools.MessageBox.ShowAsync(System.String,System.String)">
            <summary>
            指定したテキストとキャプションを表示するメッセージ ボックスを表示します。
            </summary>
            <param name="text">メッセージ ボックスに表示するテキスト。</param>
            <param name="caption">メッセージ ボックスのタイトル バーに表示するテキスト。</param>
            <returns><see cref="T:Tools.DialogResult" /> 値のいずれか 1 つ。</returns>
        </member>
        <member name="M:Tools.MessageBox.ShowAsync(System.String,Tools.MessageBoxButtons)">
            <summary>
            指定したテキストとボタンを表示するメッセージ ボックスを表示します。
            </summary>
            <param name="text">メッセージ ボックスに表示するテキスト。</param>
            <param name="buttons">メッセージ ボックスに表示するボタンを指定する <see cref="T:Tools.MessageBoxButtons" /> 値の 1 つ。</param>
            <returns><see cref="T:Tools.DialogResult" /> 値のいずれか 1 つ。</returns>
        </member>
        <member name="M:Tools.MessageBox.ShowAsync(System.String,System.String,Tools.MessageBoxButtons)">
            <summary>
            指定したテキスト、キャプション、およびボタンを表示するメッセージ ボックスを表示します。
            </summary>
            <param name="text">メッセージ ボックスに表示するテキスト。</param>
            <param name="caption">メッセージ ボックスのタイトル バーに表示するテキスト。</param>
            <param name="buttons">メッセージ ボックスに表示するボタンを指定する <see cref="T:Tools.MessageBoxButtons" /> 値の 1 つ。</param>
            <returns><see cref="T:Tools.DialogResult" /> 値のいずれか 1 つ。</returns>
        </member>
        <member name="M:Tools.MessageBox.ShowAsync(System.String,System.String,Tools.MessageBoxButtons,Tools.MessageBoxIcon)">
            <summary>
            指定したテキスト、キャプション、ボタン、およびアイコンを表示するメッセージ ボックスを表示します。
            </summary>
            <param name="text">メッセージ ボックスに表示するテキスト。</param>
            <param name="caption">メッセージ ボックスのタイトル バーに表示するテキスト。</param>
            <param name="buttons">メッセージ ボックスに表示するボタンを指定する <see cref="T:Tools.MessageBoxButtons" /> 値の 1 つ。</param>
            <param name="icon">メッセージ ボックスに表示するアイコンを指定する <see cref="T:Tools.MessageBoxIcon" /> 値の 1 つ。互換性のために残しているもので実際には意味はありません。</param>
            <returns><see cref="T:Tools.DialogResult" /> 値のいずれか 1 つ。</returns>
        </member>
        <member name="T:Tools.DialogResult">
            <summary>
            ダイアログ結果を取得または設定します。
            </summary>
        </member>
        <member name="F:Tools.DialogResult.Null">
            <summary>
            ダイアログ ボックスの戻り値がない場合は Null です。通常はエラーです。
            </summary>
        </member>
        <member name="F:Tools.DialogResult.None">
            <summary>
            ダイアログ ボックスから Nothing が返されます。つまり、モーダル ダイアログ ボックスの実行が継続します。
            </summary>
        </member>
        <member name="F:Tools.DialogResult.OK">
            <summary>
            ダイアログ ボックスの戻り値は OK です (通常は "OK" というラベルが指定されたボタンから送られます)。
            </summary>
        </member>
        <member name="F:Tools.DialogResult.Cancel">
            <summary>
            ダイアログ ボックスの戻り値は Cancel です (通常は "キャンセル" というラベルが指定されたボタンから送られます)。
            </summary>
        </member>
        <member name="F:Tools.DialogResult.Abort">
            <summary>
            ダイアログ ボックスの戻り値は Abort です (通常は "中止" というラベルが指定されたボタンから送られます)。
            </summary>
        </member>
        <member name="F:Tools.DialogResult.Retry">
            <summary>
            ダイアログ ボックスの戻り値は Retry です (通常は "再試行" というラベルが指定されたボタンから送られます)。
            </summary>
        </member>
        <member name="F:Tools.DialogResult.Ignore">
            <summary>
            ダイアログ ボックスの戻り値は Ignore です (通常は "無視" というラベルが指定されたボタンから送られます)。
            </summary>
        </member>
        <member name="F:Tools.DialogResult.Yes">
            <summary>
            ダイアログ ボックスの戻り値は Yes です (通常は "はい" というラベルが指定されたボタンから送られます)。
            </summary>
        </member>
        <member name="F:Tools.DialogResult.No">
            <summary>
            ダイアログ ボックスの戻り値は No です (通常は "いいえ" というラベルが指定されたボタンから送られます)。
            </summary>
        </member>
        <member name="T:Tools.MessageBoxButtons">
            <summary>
            <see cref="T:Tools.MessageBox" /> に表示するボタンを定義する定数を指定します。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxButtons.OK">
            <summary>
            メッセージ ボックスに [OK] ボタンを含めます。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxButtons.OKCancel">
            <summary>
            メッセージ ボックスに [OK] ボタンと [キャンセル] ボタンを含めます。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxButtons.AbortRetryIgnore">
            <summary>
            メッセージ ボックスに [中止]、[再試行]、および [無視] の各ボタンを含めます。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxButtons.YesNoCancel">
            <summary>
            メッセージ ボックスに [はい]、[いいえ]、および [キャンセル] の各ボタンを含めます。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxButtons.YesNo">
            <summary>
            メッセージ ボックスに [はい] ボタンと [いいえ] ボタンを含めます。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxButtons.RetryCancel">
            <summary>
            メッセージ ボックスに [再試行] ボタンと [キャンセル] ボタンを含めます。
            </summary>
        </member>
        <member name="T:Tools.MessageBoxIcon">
            <summary>
            表示する情報を定義する定数を指定します。互換性のために残しているもので実際には意味はありません。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxIcon.None">
            <summary>
            メッセージ ボックスに記号を表示しません。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxIcon.Hand">
            <summary>
            メッセージ ボックスに、背景が赤の円で囲まれた白い X から成る記号を表示します。
            互換性のために残しているもので実際には意味はありません。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxIcon.Error">
            <summary>
            メッセージ ボックスに、背景が赤の円で囲まれた白い X から成る記号を表示します。
            互換性のために残しているもので実際には意味はありません。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxIcon.Stop">
            <summary>
            メッセージ ボックスに、背景が赤の円で囲まれた白い X から成る記号を表示します。
            互換性のために残しているもので実際には意味はありません。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxIcon.Question">
            <summary>
            メッセージ ボックスに、円で囲まれた疑問符から成る記号を表示します。この疑問符のメッセージ アイコンは、特定の種類のメッセージを明確に表しておらず、メッセージを疑問符で表現すると、どのような種類のメッセージにも当てはまる可能性があるため、現在推奨されていません。
            また、ユーザーがメッセージ記号の疑問符をヘルプ情報と混同する可能性があります。そのため、この疑問符のメッセージ記号をメッセージボックスで使用しないでください。この記号の使用は、下位互換性を維持するためにのみサポートされています。
            互換性のために残しているもので実際には意味はありません。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxIcon.Exclamation">
            <summary>
            メッセージ ボックスに、背景が黄色の三角形で囲まれた感嘆符から成る記号を表示します。
            互換性のために残しているもので実際には意味はありません。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxIcon.Warning">
            <summary>
            メッセージ ボックスに、背景が黄色の三角形で囲まれた感嘆符から成る記号を表示します。
            互換性のために残しているもので実際には意味はありません。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxIcon.Asterisk">
            <summary>
            メッセージ ボックスに、円で囲まれた小文字の i から成る記号を表示します。
            互換性のために残しているもので実際には意味はありません。
            </summary>
        </member>
        <member name="F:Tools.MessageBoxIcon.Information">
            <summary>
            メッセージ ボックスに、円で囲まれた小文字の i から成る記号を表示します。
            互換性のために残しているもので実際には意味はありません。
            </summary>
        </member>
        <member name="T:Tools.Net">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.Net.DownloadAsync(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Net.IpaddrListAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tools.Net.IpaddrStringAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tools.Screens">
            <summary>
            画面表示に関するメソッドです。
            </summary>
        </member>
        <member name="P:Tools.Screens.rootPage">
            <summary>
            <see cref="T:Tools.Screens" /> を使用する前に表示するページを入れてください。(通常は this)
            </summary>
            <example> 
            このコードを <see cref="T:Tools.Screens" /> を表示する前に入れてください。
            <code>
            Tools.Screens.rootPage = this;
            </code>
            </example>
        </member>
        <member name="M:Tools.Screens.Message(System.String)">
            <summary>
            画面の上にメッセージを表示します。
            </summary>
            <param name="content">(<see cref="T:System.String" />)表示したいテキスト</param>
        </member>
        <member name="M:Tools.Screens.Message(System.String,System.String)">
            <summary>
            画面の上にメッセージを表示します。
            </summary>
            <param name="content">(<see cref="T:System.String" />)表示したいテキスト</param>
            <param name="title">(<see cref="T:System.String" />)表示したいタイトル</param>
        </member>
        <member name="M:Tools.Screens.MessageAsync(System.String,Windows.Foundation.Collections.IVector{Windows.UI.Popups.UICommand})">
            <summary>
            画面の上にメッセージを表示します。
            </summary>
            <param name="content">(<see cref="T:System.String" />)表示したいテキスト</param>
            <param name="uics">(<see cref="T:System.Collections.Generic.IList`1" />)追加したいコマンド</param>
            <returns>(<see cref="T:System.Int32" />)ユーザーが選択したボタンのコマンドインデックス</returns>
        </member>
        <member name="M:Tools.Screens.MessageAsync(System.String,Windows.Foundation.Collections.IVector{Windows.UI.Popups.UICommand},System.UInt32)">
            <summary>
            画面の上にメッセージを表示します。
            </summary>
            <param name="content">(<see cref="T:System.String" />)表示したいテキスト</param>
            <param name="uics">(<see cref="T:System.Collections.Generic.IList`1" />)追加したいコマンド</param>
            <param name="cmdindex">(<see cref="T:System.UInt32" />)デフォルトのコマンドインデックス</param>
            <returns>(<see cref="T:System.Int32" />)ユーザーが選択したボタンのコマンドインデックス</returns>
        </member>
        <member name="M:Tools.Screens.MessageAsync(System.String,System.String,System.String[])">
            <summary>
            画面の上にメッセージを表示します。
            </summary>
            <param name="content">(<see cref="T:System.String" />)表示したいテキスト</param>
            <param name="title">(<see cref="T:System.String" />)表示したいタイトル</param>
            <param name="commands">(<see cref="T:System.String" />)ボタンのテキスト</param>
            <returns>(<see cref="T:System.Int32" />)選択されたボタン(左から0,1,2...)</returns>
        </member>
        <member name="M:Tools.Screens.MessageAsync(System.String,System.String,Windows.Foundation.Collections.IVector{Windows.UI.Popups.UICommand},System.UInt32)">
            <summary>
            画面の上にメッセージを表示します。
            </summary>
            <param name="content">(<see cref="T:System.String" />)表示したいテキスト</param>
            <param name="title">(<see cref="T:System.String" />)表示したいタイトル</param>
            <param name="uics">(<see cref="T:System.Collections.Generic.IList`1" />)追加したいコマンド</param>
            <param name="cmdindex">(<see cref="T:System.UInt32" />)デフォルトのコマンドインデックス</param>
            <returns>(<see cref="T:System.Int32" />)ユーザーが選択したボタンのコマンドインデックス</returns>
        </member>
        <member name="M:Tools.Screens.TitleBarChange(System.String)">
            <summary>
            UWPのタイトルバーを変更します
            </summary>
            <param name="title">(<see cref="T:System.String" />)タイトルバーの文字</param>
        </member>
        <member name="M:Tools.Screens.TitleBarChange(Windows.UI.Color,Windows.UI.Color,System.String[])">
            <summary>
            UWPのタイトルバーを変更します
            </summary>
            <param name="backColor">(<see cref="T:Windows.UI.Color" />)ウィンドウがアクティブの時の背景色</param>
            <param name="foreColor">(<see cref="T:Windows.UI.Color" />)ウィンドウがアクティブの時の文字色</param>
            <param name="title">(<see cref="T:System.String" />)タイトルバーの文字</param>
        </member>
        <member name="M:Tools.Screens.TitleBarChange(Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,System.String[])">
            <summary>
            UWPのタイトルバーを変更します
            </summary>
            <param name="backColor">(<see cref="T:Windows.UI.Color" />)ウィンドウがアクティブの時の背景色</param>
            <param name="foreColor">(<see cref="T:Windows.UI.Color" />)ウィンドウがアクティブの時の文字色</param>
            <param name="back_backColor">(<see cref="T:Windows.UI.Color" />)ウィンドウが非アクティブの時の背景色</param>
            <param name="back_foreColor">(<see cref="T:Windows.UI.Color" />)ウィンドウが非アクティブの時の文字色</param>
            <param name="title">(<see cref="T:System.String" />)タイトルバーの文字</param>
        </member>
        <member name="T:Tools.Sounds">
            <summary>
            音に関するメソッドです。
            </summary>
        </member>
        <member name="P:Tools.Sounds.rootPage">
            <summary>
            <see cref="M:Tools.Sounds.PlayAsync(System.String,Windows.UI.Xaml.Media.AudioCategory)" /> を使用する前に表示するページを入れてください。(通常は this)
            </summary>
            <example> 
            このコードを <see cref="M:Tools.Sounds.PlayAsync(System.String,Windows.UI.Xaml.Media.AudioCategory)" /> を使用する前に入れてください。
            <code>
            Tools.Sounds.rootPage = this;
            </code>
            </example>
        </member>
        <member name="M:Tools.Sounds.PlayAsync(System.String,Windows.UI.Xaml.Media.AudioCategory)">
            <summary>
            音を再生します。
            </summary>
            <param name="filename">(<see cref="T:System.String" />)ファイル名</param>
            <param name="audiocategory">(<see cref="T:Windows.UI.Xaml.Media.AudioCategory" />)オーディオ情報の目的</param>
        </member>
        <member name="M:Tools.Sounds.Speak(System.String)">
            <summary>
            音声合成でテキストを読み上げます
            </summary>
            <param name="text">(<see cref="T:System.String" />)読み上げるテキスト</param>
        </member>
        <member name="M:Tools.Sounds.Speak(System.String,Windows.UI.Xaml.Controls.MediaElement)">
            <summary>
            音声合成でテキストを読み上げます
            </summary>
            <param name="text">(<see cref="T:System.String" />)読み上げるテキスト</param>
            <param name="me1">(<see cref="T:Windows.UI.Xaml.Controls.MediaElement" />)MediaElementを指定</param>
        </member>
        <member name="M:Tools.Sounds.Speak(System.String,System.String)">
            <summary>
            音声合成でテキストを読み上げます
            </summary>
            <param name="text">(<see cref="T:System.String" />)読み上げるテキスト</param>
            <param name="voice">(<see cref="T:System.String" />)声</param>
        </member>
        <member name="M:Tools.Sounds.Speak(System.String,System.String,Windows.UI.Xaml.Controls.MediaElement)">
            <summary>
            音声合成でテキストを読み上げます
            </summary>
            <param name="text">(<see cref="T:System.String" />)読み上げるテキスト</param>
            <param name="voice">(<see cref="T:System.String" />)声</param>
            <param name="me1">(<see cref="T:Windows.UI.Xaml.Controls.MediaElement" />)MediaElementを指定</param>
        </member>
        <member name="M:Tools.Sounds.Speak(System.String,Windows.Media.SpeechSynthesis.VoiceInformation,Windows.UI.Xaml.Controls.MediaElement)">
            <summary>
            音声合成でテキストを読み上げます
            </summary>
            <param name="text">(<see cref="T:System.String" />)読み上げるテキスト</param>
            <param name="onsei">(<see cref="T:Windows.Media.SpeechSynthesis.VoiceInformation" />)VoiceInformationを指定</param>
            <param name="me1">(<see cref="T:Windows.UI.Xaml.Controls.MediaElement" />)MediaElementを指定</param>
        </member>
        <member name="M:Tools.Sounds.ReadVoice(System.String)">
            <summary>
            インストールされている合成音声を(<see cref="T:System.String" />)配列で格納します。
            </summary>
            <param name="lang">(<see cref="T:System.String" />)絞り込みたい言語。すべての場合、空の文字列を指定してください</param>
            <returns><see cref="T:System.String" />インストールされている音声</returns>
        </member>
        <member name="M:Tools.Sounds.ReadSpeechAsync">
            <summary>
            音声認識を開始し、聞き取った文章を(<see cref="T:System.String" />)で返します。
            </summary>
            <returns>(<see cref="T:System.String" />)音声認識の結果</returns>
        </member>
        <member name="T:Tools.Text">
            <summary>
            テキストファイルを扱うメソッドです。
            </summary>
        </member>
        <member name="M:Tools.Text.ReadAsync(System.String)">
            <summary>
            テキストファイルを読み込みます。
            </summary>
            <param name="filename">(<see cref="T:System.String" />)ファイル名</param>
            <returns>(<see cref="T:System.String" />)</returns>
        </member>
        <member name="M:Tools.Text.ReadFileAsync(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Text.ReadFileAsync(Windows.Storage.StorageFile)">
            <summary>
            
            </summary>
            <param name="sf"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Text.shortString(System.String,System.Int32)">
            <summary>
            長い文字列を短く短縮します
            </summary>
            <param name="str">長い文字列</param>
            <param name="length">制限する長さ</param>
            <returns></returns>
        </member>
        <member name="M:Tools.Text.jsonType(System.String)">
            <summary>
            
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="T:Tools.Toast">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,Windows.Foundation.Uri)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,Windows.Foundation.Uri,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="uri"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,Windows.Foundation.Uri)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="text3"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,Windows.Foundation.Uri,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="uri"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,System.String,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="text3"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,System.String,Windows.Foundation.Uri)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="text3"></param>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Create(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,System.String,Windows.Foundation.Uri,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="text3"></param>
            <param name="uri"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,Windows.Foundation.Uri)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,Windows.Foundation.Uri,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="uri"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,Windows.Foundation.Uri)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="text3"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,Windows.Foundation.Uri,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="uri"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,System.String,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="text3"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,System.String,Windows.Foundation.Uri)">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="text3"></param>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Tools.Toast.Show(Windows.UI.Notifications.ToastTemplateType,System.String,System.String,System.String,Windows.Foundation.Uri,Windows.Foundation.Collections.IVectorView{Tools.ToastAction})">
            <summary>
            
            </summary>
            <param name="ttt"></param>
            <param name="text1"></param>
            <param name="text2"></param>
            <param name="text3"></param>
            <param name="uri"></param>
            <param name="tas"></param>
            <returns></returns>
        </member>
        <member name="T:Tools.ToastActivationType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tools.ToastActivationType.foreground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tools.ToastActivationType.background">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tools.ToastActivationType.protocol">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tools.ToastActivationType.system">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tools.ToastAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.ToastAction.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.ToastAction.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <param name="arguments"></param>
        </member>
        <member name="M:Tools.ToastAction.#ctor(Tools.ToastActivationType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="activationType"></param>
            <param name="content"></param>
            <param name="arguments"></param>
        </member>
        <member name="P:Tools.ToastAction.activationType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.ToastAction.content">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.ToastAction.arguments">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tools.PageInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tools.PageInfo.backButton(Windows.UI.Xaml.Controls.Frame)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tools.ApplicationSetting">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tools.ApplicationSetting.rootPage">
            <summary>
            この中に <see cref="T:Windows.UI.Xaml.Controls.Page" /> を入れると、
            <see cref="P:Tools.MessageBox.rootPage" /> と <see cref="P:Tools.Screens.rootPage" /> と <see cref="P:Tools.Sounds.rootPage" />
             に代入されます。
            </summary>
        </member>
        <member name="T:Tools.DeviceSetting">
            <summary>
            デバイスの情報を取得します。
            </summary>
        </member>
        <member name="P:Tools.DeviceSetting.isMobile">
            <summary>
            OSがWindows 10 mobileかどうかを判定します。
            </summary>
        </member>
        <member name="P:Tools.DeviceSetting.deviceName">
            <summary>
            デバイス名を取得します。
            </summary>
        </member>
        <member name="P:Tools.DeviceSetting.osName">
            <summary>
            OS名を取得します。
            </summary>
        </member>
        <member name="P:Tools.DeviceSetting.productName">
            <summary>
            機種名を取得します
            </summary>
        </member>
        <member name="T:Tools.selectTheme">
            <summary>
            テーマ
            </summary>
        </member>
        <member name="F:Tools.selectTheme.Default">
            <summary>
            デフォルト
            </summary>
        </member>
        <member name="F:Tools.selectTheme.Light">
            <summary>
            明るい
            </summary>
        </member>
        <member name="F:Tools.selectTheme.Dark">
            <summary>
            暗い
            </summary>
        </member>
        <member name="T:Tools.selectOrientation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tools.selectOrientation.Landscape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tools.selectOrientation.Portrait">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tools.Times">
            <summary>
            時間を計測します
            </summary>
        </member>
        <member name="M:Tools.Times.Start">
            <summary>
            タイマーをスタートします
            </summary>
        </member>
        <member name="M:Tools.Times.Stop">
            <summary>
            タイマーをストップします
            </summary>
        </member>
        <member name="M:Tools.Tools_UWP_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(Windows.UI.Xaml.Interop.TypeName)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:Tools.Tools_UWP_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:Tools.Tools_UWP_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
    </members>
</doc>
